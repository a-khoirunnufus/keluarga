{
  "openapi":"3.0.2",
  "info": {
    "title":"Keluarga API",
    "version":"1.0"
  },
  "servers": [
    {"url":"http://127.0.0.1:8000/api"}
  ],
  "paths": {
    "/person": {
      "get": {
        "tags": ["Person"],
        "summary": "Mendapatkan semua data person",
        "description": "Mendapatkan semua data person",
        "parameters": [
          {
            "$ref": "#/components/parameters/namaParam"
          },
          {
            "$ref": "#/components/parameters/jenisKelaminParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Berhasil mendapatkan semua data person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/People"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/People"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Person"],
        "summary": "Menambahkan record person baru",
        "description": "Menambahkan record person baru",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePerson"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/CreateOrUpdatePerson"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Berhasil menambahkan record person baru",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/Person"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Gagal menambahkan record person baru",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "default": {
                    "description": "Contoh gagal menambahkan record person baru",
                    "value": {
                      "error": "Tidak dapat menemukan parentId"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/person/{personId}": {
      "get": {
        "tags": ["Person"],
        "summary": "Mendapatkan detail person tertentu",
        "description": "Mendapatkan detail person tertentu",
        "parameters": [
          {
            "$ref": "#/components/parameters/personIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Berhasil mendapatkan detail person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/Person"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": ["Person"],
        "summary": "Mengedit data person tertentu",
        "description": "Mengedit data person tertentu",
        "parameters": [
          {
            "$ref": "#/components/parameters/personIdParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePerson"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/CreateOrUpdatePerson"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Berhasil mengedit data person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/Person"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Gagal mengedit data person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "default": {
                    "description": "Contoh gagal menambahkan record person baru",
                    "value": {
                      "error": "Tidak dapat menemukan parentId"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Person"],
        "summary": "Menghapus suatu person",
        "description": "Menghapus suatu person",
        "parameters": [
          {
            "$ref": "#/components/parameters/personIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Berhasil menghapus person",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "description": "Pesan berhasil menghapus person",
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "default": {
                    "description": "Contoh berhasil menghapus person",
                    "value": {
                      "success": "Berhasil menghapus person"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Gagal menghapus person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "default": {
                    "description": "Contoh gagal menghapus person",
                    "value": {
                      "error": "Person ini memiliki children"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/family/grandparent/{personId}": {
      "get": {
        "tags": ["Family"],
        "summary": "Mendapatkan grandparent dari person tertentu",
        "description": "Mendapatkan grandparent dari person tertentu",
        "parameters": [
          {
            "$ref": "#/components/parameters/personIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Berhasil mendapatkan grandparent dari person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/Person"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Person tidak memiliki grandparent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "default": {
                    "description": "Contoh person tidak memiliki grandparent",
                    "value": {
                      "message": "Person tidak memiliki grandparent"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/family/parent/{personId}": {
      "get": {
        "tags": ["Family"],
        "summary": "Mendapatkan parent dari person tertentu",
        "description": "Mendapatkan parent dari person tertentu",
        "parameters": [
          {
            "$ref": "#/components/parameters/personIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Berhasil mendapatkan parent dari person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/Person"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Person tidak memiliki parent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "default": {
                    "description": "Contoh person tidak memiliki parent",
                    "value": {
                      "message": "Person tidak memiliki parent"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/family/child/{personId}": {
      "get": {
        "tags": ["Family"],
        "summary": "Mendapatkan child dari person tertentu",
        "description": "Mendapatkan child dari person tertentu",
        "parameters": [
          {
            "$ref": "#/components/parameters/personIdParam"
          },
          {
            "$ref": "#/components/parameters/jenisKelaminParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Berhasil mendapatkan child dari person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/People"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/People"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Person tidak memiliki child",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "default": {
                    "description": "Contoh person tidak memiliki child",
                    "value": {
                      "message": "Person tidak memiliki child"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/family/grandchild/{personId}": {
      "get": {
        "tags": ["Family"],
        "summary": "Mendapatkan grandchild dari person tertentu",
        "description": "Mendapatkan grandchild dari person tertentu",
        "parameters": [
          {
            "$ref": "#/components/parameters/personIdParam"
          },
          {
            "$ref": "#/components/parameters/jenisKelaminParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Berhasil mendapatkan grandchild dari person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/People"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/People"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Person tidak memiliki grandchild",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "default": {
                    "description": "Contoh person tidak memiliki grandchild",
                    "value": {
                      "message": "Person tidak memiliki grandchild"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/family/aunt/{personId}": {
      "get": {
        "tags": ["Family"],
        "summary": "Mendapatkan aunt dari person tertentu",
        "description": "Mendapatkan aunt dari person tertentu",
        "parameters": [
          {
            "$ref": "#/components/parameters/personIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Berhasil mendapatkan aunt dari person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/People"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/People"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Person tidak memiliki aunt",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "default": {
                    "description": "Contoh person tidak memiliki aunt",
                    "value": {
                      "message": "Person tidak memiliki aunt"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/family/uncle/{personId}": {
      "get": {
        "tags": ["Family"],
        "summary": "Mendapatkan uncle dari person tertentu",
        "description": "Mendapatkan uncle dari person tertentu",
        "parameters": [
          {
            "$ref": "#/components/parameters/personIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Berhasil mendapatkan uncle dari person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/People"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/People"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Person tidak memiliki uncle",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "default": {
                    "description": "Contoh person tidak memiliki uncle",
                    "value": {
                      "message": "Person tidak memiliki uncle"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/family/cousin/{personId}": {
      "get": {
        "tags": ["Family"],
        "summary": "Mendapatkan cousin dari person tertentu",
        "description": "Mendapatkan cousin dari person tertentu",
        "parameters": [
          {
            "$ref": "#/components/parameters/personIdParam"
          },
          {
            "$ref": "#/components/parameters/jenisKelaminParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Berhasil mendapatkan cousin dari person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/People"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/People"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Person tidak memiliki cousin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "default": {
                    "description": "Contoh person tidak memiliki cousin",
                    "value": {
                      "message": "Person tidak memiliki cousin"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/family/tree": {
      "get": {
        "tags": ["Family"],
        "summary": "Mendapatkan hirarki keluarga dalam bentuk tree",
        "description": "Mendapatkan hirarki keluarga dalam bentuk tree",
        "responses": {
          "200": {
            "description": "Berhasil mendapatkan hirarki keluarga",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TreeNode"
                },
                "examples": {
                  "default": {
                    "description": "Contoh hirakri keluarga",
                    "value": {
                      "text": {
                        "name": "Budi",
                        "data-gender": "laki-laki"
                      },
                      "children": [
                        {
                          "text": {
                            "name": "Dodi",
                            "data-gender": "laki-laki"
                          }
                        },
                        {
                          "text": {
                            "name": "Dedi",
                            "data-gender": "laki-laki"
                          }
                        },
                        {
                          "text": {
                            "name": "Dede",
                            "data-gender": "laki-laki"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Hirarki keluarga tidak tersedia",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "default": {
                    "description": "Contoh hirakri keluarga tidak tersedia",
                    "value": {
                      "message": "Hirarki keluarga tidak tersedia"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "personIdParam": {
        "name": "personId",
        "description": "Id milik person",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      },
      "namaParam": {
        "name": "nama",
        "description": "Filter person berdasarkan nama",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "minLength": 1
        }
      },
      "jenisKelaminParam": {
        "name": "jenisKelamin",
        "description": "Filter person berdasarkan jenis kelamin",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "enum": ["laki-laki", "perempuan"]
        }
      }
    },
    "schemas": {
      "Person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nama": {
            "type": "string"
          },
          "jenisKelamin": {
            "type": "string",
            "enum": ["laki-laki", "perempuan"]
          },
          "parentId": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "CreatePerson": {
        "type": "object",
        "properties": {
          "nama": {
            "type": "string",
            "minLength": 1
          },
          "jenisKelamin": {
            "type": "string",
            "enum": ["laki-laki", "perempuan"]
          },
          "parentId": {
            "type": "integer",
            "minimum": 1,
            "nullable": true
          }
        },
        "required": ["nama", "jenisKelamin", "parentId"]
      },
      "UpdatePerson": {
        "type": "object",
        "properties": {
          "nama": {
            "type": "string",
            "minLength": 1
          },
          "jenisKelamin": {
            "type": "string",
            "enum": ["laki-laki", "perempuan"]
          },
          "parentId": {
            "type": "integer",
            "minimum": 1,
            "nullable": true
          }
        }
      },
      "People": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "nama": {
              "type": "string"
            },
            "jenisKelamin": {
              "type": "string",
              "enum": ["laki-laki", "perempuan"]
            },
            "parentId": {
              "type": "integer",
              "nullable": true
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Pesan yang menjelaskan error yang terjadi",
            "type": "string"
          }
        }
      },
      "TreeNode": {
        "type": "object",
        "properties": {
          "text": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1
              },
              "data-gender": {
                "type": "string",
                "enum": ["laki-laki", "perempuan"]
              }
            }
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TreeNode"
            }
          }
        },
        "required": ["text"]
      }
    },
    "responses": {
      "NotFound": {
        "description": "Tidak dapat menemukan person",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "description": "Pesan yang menjelaskan error yang terjadi",
                  "type": "string"
                }
              }
            },
            "examples": {
              "default": {
                "description": "Contoh gagal menemukan person",
                "value": {
                  "error": "Person tidak tersedia"
                }
              }
            }
          }
        }
      }
    },
    "examples": {
      "Person": {
        "description": "Contoh berhasil mendapatkan detail person",
        "value": {
          "id": 1,
          "nama": "Budi",
          "jenisKelamin": "laki-laki",
          "parentId": null
        }
      },
      "CreateOrUpdatePerson": {
        "description": "Contoh data untuk create/edit person",
        "value": {
          "nama": "Ahmad",
          "jenisKelamin": "laki-laki",
          "parentId": 1
        }
      },
      "People": {
        "description": "Contoh berhasil mendapatkan semua data person",
        "value": [
          {
            "id": 1,
            "nama": "Budi",
            "jenisKelamin": "laki-laki",
            "parentId": null
          },
          {
            "id": 2,
            "nama": "Dedi",
            "jenisKelamin": "laki-laki",
            "parentId": 1
          },
          {
            "id": 3,
            "nama": "Dodi",
            "jenisKelamin": "laki-laki",
            "parentId": 1
          },
          {
            "id": 4,
            "nama": "Dede",
            "jenisKelamin": "laki-laki",
            "parentId": 1
          },
          {
            "id": 5,
            "nama": "Dewi",
            "jenisKelamin": "perempuan",
            "parentId": 1
          }
        ]
      }
    }
  }
}